"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.flashFactory = void 0;
const util_1 = require("util");
function flashFactory() {
    return {
        request(type, ...message) {
            let currentSession = this.session.get('flash');
            if (!currentSession) {
                currentSession = {};
                this.session.set('flash', currentSession);
            }
            if (message.length === 0) {
                throw new Error('Provide a message to flash.');
            }
            if (Array.isArray(message[0])) {
                for (let i = 0; i < message[0].length; i++) {
                    currentSession = Object.assign(Object.assign({}, currentSession), { [type]: (currentSession[type] || []).concat(message[0][i]) });
                }
            }
            else {
                currentSession = Object.assign(Object.assign({}, currentSession), { [type]: (currentSession[type] || []).concat(message.length > 1 ? util_1.format.apply(undefined, message) : message[0]) });
            }
            this.session.set('flash', currentSession);
            return this.session.get('flash')[type].length;
        },
        reply(type) {
            if (!type) {
                const allMessages = this.request.session.get('flash');
                this.request.session.set('flash', {});
                return allMessages;
            }
            const _a = this.request.session.get('flash') || {}, _b = type, messages = _a[_b], flash = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
            this.request.session.set('flash', flash);
            return messages || [];
        },
    };
}
exports.flashFactory = flashFactory;
